# example linker initialization file.
system begin dos
    libpath /watcom/lib286
    libpath /watcom/lib286/dos
    format dos ^
end
system begin dos4g
    option osname='DOS/4G'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    op stub=wstub.exe
    format os2 le
end
system begin os2
    option osname='OS/2 16-bit'
    library os2.lib
    libpath /watcom/lib286
    libpath /watcom/lib286/os2
    format os2 ^
end
system begin os2_pm
    option osname='OS/2 16-bit Presentation Manager'
    library os2.lib
    libpath /watcom/lib286
    libpath /watcom/lib286/os2
    format os2 pm ^
end
system begin os2_dll
    option osname='OS/2 16-bit'
    library os2.lib
    libpath /watcom/lib286
    libpath /watcom/lib286/os2
    format os2 dll ^
end
system begin windows
    option osname='Windows 16-bit'
    libpath /watcom/lib286
    libpath /watcom/lib286/win
    library windows
    option nocaseexact
    option stack=8k, heapsize=1k
    format windows ^
end
system begin windows_dll
    option osname='Windows 16-bit'
    libpath /watcom/lib286
    libpath /watcom/lib286/win
    library windows
    option nocaseexact
    option stack=8k, heapsize=1k
    libfile libentry.obj
    format windows dll ^
end
system begin win_vxd
    option osname='Windows VxD'
    format windows vxd ^
end
system begin os2v2
    option osname='OS/2 32-bit'
    libpath /watcom/lib386
    libpath /watcom/lib386/os2
    format os2 lx ^
end
system begin os2v2_pm
    option osname='OS/2 32-bit Presentation Manager'
    libpath /watcom/lib386
    libpath /watcom/lib386/os2
    format os2 lx pm ^
end
system begin os2v2_dll
    option osname='OS/2 32-bit'
    libpath /watcom/lib386
    libpath /watcom/lib386/os2
    format os2 lx dll ^
end
system begin com
    option osname='DOS .COM'
    libpath /watcom/lib286
    libpath /watcom/lib286/dos
    libfile cstart_t.obj
    format dos com
end
system begin nt
    option osname='Windows NT character-mode'
    libpath /watcom/lib386
    libpath /watcom/lib386/nt
    library kernel32,user32,gdi32,advapi32,comdlg32,ole32,oleaut32,winspool,shell32,uuid,comctl32
#    op stack=0x40000 com st=0x1000
    format windows nt ^
    runtime console=4.0
end
system begin nt_win
    option osname='Windows NT windowed'
    libpath /watcom/lib386
    libpath /watcom/lib386/nt
    library kernel32,user32,gdi32,advapi32,comdlg32,ole32,oleaut32,winspool,shell32,uuid,comctl32
#    op stack=0x40000 com st=0x1000
    format windows nt ^
    runtime windows=4.0
end
system begin nt_dll
    option osname='Windows NT'
    libpath /watcom/lib386
    libpath /watcom/lib386/nt
    library kernel32,user32,gdi32,advapi32,comdlg32,ole32,oleaut32,winspool,shell32,uuid,comctl32
    format windows nt dll ^
    runtime windows=4.0
end
system begin win32
    option osname='Win32'
    libpath /watcom/lib386
    libpath /watcom/lib386/nt
    library kernel32,user32,gdi32,advapi32,comdlg32,ole32,oleaut32,winspool,shell32,uuid,comctl32
    format windows nt ^
    runtime windows=4.0
end
system begin causeway
    option osname='CauseWay'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    op stub=cwstub.exe
    format os2 le ^
end
system begin cwdlls
    option osname='CauseWay (stack calling convention)'
    libpath /WATCOM/lib386'
    libpath /WATCOM/lib386/dos'
    format os2 le dll ^
    libfile dllstrts.obj
end
system begin cwdllr
    option osname='CauseWay (register calling convention)'
    libpath /WATCOM/lib386'
    libpath /WATCOM/lib386/dos'
    format os2 le dll ^
    libfile dllstrtr.obj
end
system begin stub32a
    option osname='DOS/32A DOS Extender w/ Standard stub (LE-style)'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    libpath /watcom/lib386/l32
    op stub=stub32a.exe
    format os2 le
end
system begin stub32x
    option osname='DOS/32A DOS Extender w/ Standard stub (LX-style)'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    libpath /watcom/lib386/l32
#   debug watcom all
#   op symfile
    op stub=stub32a.exe
    op internalrelocs
    op align=16
    format os2 lx
end
system begin pmodew
    option osname='PMODE/W'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    op stub=pmodew.exe
    format os2 le
end

system begin hxnt
    option osname='HX Extender (Win32 PE)'
    libpath /watcom/lib386
    libpath /watcom/lib386/nt
    library kernel32,user32,advapi32,ole32,oleaut32
    format windows nt ^
    op stub=dpmist32.bin
    runtime console=4.0
end

system begin hxdos
    option osname='HX Extender (DOS PE, stack calling conv)'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    library hxow
    libfile cstrtdhx.obj
    op stub=loadpe.bin
#   op stub=dpmild32.bin
    format windows pe hx ^
    runtime console=4.0
end

system begin hxdosr
    option osname='HX Extender (DOS PE, register calling conv)'
    libpath /watcom/lib386
    libpath /watcom/lib386/dos
    library hxow
    libfile cstrtdhr.obj
    op stub=loadpe.bin
#   op stub=dpmild32.bin
    format windows pe hx ^
    runtime console=4.0
end

# another DOS PE the binary format with Win32 linked statically

system begin hxnts
    option osname='HX Extender (DOS PE, static Win32)'
    libpath /hx/lib
    libpath /watcom/lib386
    libpath /watcom/lib386/nt
    libfile initw3ow.obj
    disable 1030
    op stack=0x40000
    library imphlp,dkrnl32s,duser32s
    op stub=loadpe.bin
    format windows pe hx ^
    runtime console=4.0
end
