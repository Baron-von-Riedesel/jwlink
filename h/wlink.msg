pick(    MSG_FILE_REC_NAME_0,   "file %s: " )
pick(    MSG_FILE_REC_NAME_1,   "(%s): " )
pick(    MSG_FILE_REC_NAME_2,   "file %1(%2): " )
pick(    MSG_FILE_REC_NAME_3,   "record %d: " )
pick(    MSG_FILE_REC_NAME_4,   "file %s, record %d: " )
pick(    MSG_FILE_REC_NAME_5,   "(%s), record %d: " )
pick(    MSG_FILE_REC_NAME_6,   "file %1(%2), record %d: " )
pick(    MSG_ERROR,             "Error! E%d: " )
pick(    MSG_WARNING,           "Warning! W%d: " )
pick(    MSG_SYS_BLK,           "system block %s: " )
pick(    MSG_ENVIRON,           "environment %s: " )
pick(    MSG_LINE,              "line(%d): " )
pick(    MSG_FORMAT_NOT_DECIDED,  "format not decided" )
pick(    MSG_NO_LEADER_ON_PASS_2, "no leader found on pass 2" )
pick(    MSG_IOERRLIST_0,       "" )
pick(    MSG_IOERRLIST_1,       "" )
pick(    MSG_IOERRLIST_2,   "file not found" )
pick(    MSG_IOERRLIST_3,   "path not found" )
pick(    MSG_IOERRLIST_4,   "too many open files" )
pick(    MSG_IOERRLIST_5,   "access denied" )
pick(    MSG_IOERRLIST_6,   "invalid handle" )
pick(    MSG_IOERRLIST_7,   "disk full" )
pick(    MSG_PRESS_KEY,     "press any key to continue" )
pick(    MSG_FILE_TYPES_0,  "OS/2" )
pick(    MSG_FILE_TYPES_1,  "OS/2 linear" )
pick(    MSG_FILE_TYPES_2,  "OS/2 linear extended" )
pick(    MSG_FILE_TYPES_3,  "Windows" )
pick(    MSG_FILE_TYPES_4,  "PE" )
pick(    MSG_FILE_TYPES_5,  "DOS" )
pick(    MSG_FILE_TYPES_6,  "DOS .COM" )
pick(    MSG_FILE_TYPES_7,  "DOS overlayed" )
pick(    MSG_FILE_TYPES_8,  "Novell Netware" )
pick(    MSG_FILE_TYPES_9,  "QNX" )
pick(    MSG_FILE_TYPES_10, "Phar Lap simple" )
pick(    MSG_FILE_TYPES_11, "Phar Lap extended" )
pick(    MSG_FILE_TYPES_12, "Phar Lap relocatable" )
pick(    MSG_FILE_TYPES_13, "Phar Lap segmented" )
pick(    MSG_FILE_TYPES_14, "QNX 386" )
pick(    MSG_FILE_TYPES_15, "ELF" )
pick(    MSG_FILE_TYPES_16, "Windows VxD" )
pick(    MSG_FILE_TYPES_17, "DOS/16M" )
pick(    MSG_FILE_PE64,     "64-bit PE" )
pick(    MSG_FILE_ELF64,    "64-bit ELF" )
pick(    MSG_CREATE_TYPE_DLL,   "dynamic link library" )
pick(    MSG_CREATE_TYPE_EXE,   "executable" )
pick(    MSG_IS_A_EXE,      "This is %f" )

pick(    MSG_MAP_BOX_GROUP,             "|   Groups   |" )
pick(    MSG_MAP_TITLE_GROUP_0,         "Group                           Address              Size" )
pick(    MSG_MAP_TITLE_GROUP_1,         "=====                           =======              ====" )
pick(    MSG_MAP_BOX_ABS_SEG,           "|   Absolute Segments   |" )
pick(    MSG_MAP_TITLE_ABS_SEG_0,       "Segment                 Class           Address              Size" )
pick(    MSG_MAP_TITLE_ABS_SEG_1,       "=======                 =====           =======              ====" )
pick(    MSG_MAP_BOX_SEGMENTS,          "|   Segments   |" )
pick(    MSG_MAP_TITLE_SEGMENTS_0,      "Segment                Class          Group          Address         Size" )
pick(    MSG_MAP_TITLE_SEGMENTS_1,      "=======                =====          =====          =======         ====" )
pick(    MSG_MAP_BOX_MEMORY_MAP,        "|   Memory Map   |" )
pick(    MSG_MAP_UNREF_SYM,             "* = unreferenced symbol" )
pick(    MSG_MAP_REF_LOCAL_SYM,         "+ = symbol only referenced locally" )
pick(    MSG_MAP_TITLE_MEMORY_MAP_0,    "Address        Symbol" )
pick(    MSG_MAP_TITLE_MEMORY_MAP_1,    "=======        ======" )
pick(    MSG_MAP_BOX_OVERLAY_VECTOR,    "|   Overlay Vectors   |" )
pick(    MSG_MAP_BOX_COMMUNAL,          "|   Communal Symbols   |" )
pick(    MSG_MAP_TITLE_COMMUNAL_0,      "Address        Symbol" )
pick(    MSG_MAP_TITLE_COMMUNAL_1,      "=======        ======" )
pick(    MSG_MAP_BOX_MOD_SEG,           "|   Module Segments   |" )
pick(    MSG_MAP_ABS_ADDR,              "* = absolute address" )
pick(    MSG_MAP_32BIT_SEG,             "! = 32-bit segment" )
pick(    MSG_MAP_TITLE_MOD_SEG_0,       "Module          Segment               Class           Address         Size" )
pick(    MSG_MAP_TITLE_MOD_SEG_1,       "======          =======               =====           =======         ====" )
pick(    MSG_MAP_BOX_TRACE_SYM,         "|   Traced Symbols   |" )
pick(    MSG_MAP_BOX_IMP_SYM,           "|   Imported Symbols   |" )
pick(    MSG_MAP_TITLE_IMP_SYM_0,       "Symbol" )
pick(    MSG_MAP_TITLE_IMP_SYM_1,       "======" )
pick(    MSG_MAP_TITLE_IMP_SYM_2,       "Symbol                              Module" )
pick(    MSG_MAP_TITLE_IMP_SYM_3,       "======                              ======" )
pick(    MSG_MAP_BOX_UNRES_REF,         "|   Unresolved References   |" )
pick(    MSG_MAP_TITLE_UNRES_REF_0,     "Undefined Symbol                Referenced by" )
pick(    MSG_MAP_TITLE_UNRES_REF_1,     "================                =============" )
pick(    MSG_MAP_BOX_LIB_USED,          "|   Libraries Used   |" )
pick(    MSG_MAP_BOX_LINKER_STAT,       "|   Linker Statistics   |" )
pick(    MSG_MAP_STACK_SIZE,            "Stack size:" )
pick(    MSG_MAP_MEM_SIZE,              "Memory size:" )
pick(    MSG_MAP_OVL_SIZE,              "Overlay area size:" )
pick(    MSG_MAP_ENTRY_PT_ADDR,         "Entry point address: %a" )
pick(    MSG_MAP_LINK_TIME,             "Link time: %s" )
pick(    MSG_MAP_COMDAT,                "c = initialized communal data" )
pick(    MSG_MAP_SYM_STATIC,            "s = symbol is static" )
pick(    MSG_MAP_DEFINING_MODULE,       "Module: %s(%s)" )

/*
 *  General help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_GENERAL_HELP_0,    "usage: jwlink {directive}" )
pick(    MSG_GENERAL_HELP_1,    "\ncommands valid for all executable formats:\n" )
pick(    MSG_GENERAL_HELP_2,    "directive  ::= \"File\"        obj_spec{\",\"obj_spec}" )
pick(    MSG_GENERAL_HELP_3,    "            | \"Name\"         exe_file" )
pick(    MSG_GENERAL_HELP_4,    "            | \"OPtion\"       option{\",\"option}" )
pick(    MSG_GENERAL_HELP_5,    "            | \"Library\"      library_file{\",\"library_file}" )
pick(    MSG_GENERAL_HELP_6,    "            | \"OPTLIB\"       library_file{\",\"library_file}" )
pick(    MSG_GENERAL_HELP_7,    "            | \"Path\"         path_name{\";\"path_name}" )
pick(    MSG_GENERAL_HELP_8,    "            | \"LIBPath\"      path_name{\";\"path_name}" )
pick(    MSG_GENERAL_HELP_9,    "            | \"LIBFile\"      obj_file{\",\"obj_file}" )
pick(    MSG_GENERAL_HELP_10,   "            | \"Debug\"        dbtype [dblist] | dblist" )
pick(    MSG_GENERAL_HELP_11,   "            | \"MODTrace\"     module_name{\",\"module_name}" )
pick(    MSG_GENERAL_HELP_12,   "            | \"SYMTrace\"     symbol_name{\",\"symbol_name}" )
pick(    MSG_GENERAL_HELP_13,   "            | \"SYStem\"       system_name" )
pick(    MSG_GENERAL_HELP_14,   "            | \"SYStem Begin\" system_name directive {directive} \"End\"" )
pick(    MSG_GENERAL_HELP_15,   "            | \"FORMat\"       form" )
pick(    MSG_GENERAL_HELP_16,   "            | \"REFerence\"    symbol_name{\",\"symbol_name}" )
pick(    MSG_GENERAL_HELP_17,   "            | \"@\"            directive_file" )
pick(    MSG_GENERAL_HELP_18,   "            | \"#\"            comment" )

pick(    MSG_GENERAL_HELP_19,   "" )

pick(    MSG_GENERAL_HELP_20,   "\ncommands valid for all executable formats (continued):\n" )
pick(    MSG_GENERAL_HELP_21,   "            | \"Alias\"        alias\"=\"symbol_name{\",\"alias\"=\"symbol_name}" )
pick(    MSG_GENERAL_HELP_22,   "            | \"DISAble\"      msg_num{\",\"msg_num}" )
pick(    MSG_GENERAL_HELP_23,   "            | \"SOrt\"         [\"GLobal\"] [\"ALPhabetical\"]" )
pick(    MSG_GENERAL_HELP_24,   "            | \"LANGuage\"     (\"JApanese\" | \"CHinese\" | \"KOrean\")" )
pick(    MSG_GENERAL_HELP_25,   "            | \"STARTLINK\"" )
pick(    MSG_GENERAL_HELP_26,   "            | \"ENDLINK\"" )
pick(    MSG_GENERAL_HELP_27,   "            | \"MODFile\"      obj_file{\",\"obj_file}" )
pick(    MSG_GENERAL_HELP_28,   "obj_spec  ::= obj_file[\"(\"obj_member\")\"] | library_file[\"(\"lib_member\")\"]" )
pick(    MSG_GENERAL_HELP_29,   "dbtype    ::= \"Watcom\" | \"Dwarf\" | \"Codeview\"" )
pick(    MSG_GENERAL_HELP_30,   "dblist    ::= dboption{\",\"dboption}" )
pick(    MSG_GENERAL_HELP_31,   "dboption  ::= \"LInes\" | \"Types\" | \"LOcals\" | \"All\"" )
pick(    MSG_GENERAL_HELP_32,   "option    ::= \"ARTificial\" | \"[NO]CAChe\" | \"[NO]Caseexact\" | \"CVPack\"" )
pick(    MSG_GENERAL_HELP_33,   "            | \"Dosseg\" | \"ELiminate\" | \"[NO]FARcalls\"" )
pick(    MSG_GENERAL_HELP_34,   "            | \"INCremental[=file_name]\" | \"MANGlednames\"" )
pick(    MSG_GENERAL_HELP_35,   "            | \"Map\"[\"=\"map_file] | \"MAXErrors=\"n | \"NAMELen=\"n" )
pick(    MSG_GENERAL_HELP_36,   "            | \"NODefaultlibs\" | \"NOEXTension\" | \"OSName=\"string | \"Quiet\"" )
pick(    MSG_GENERAL_HELP_37,   "            | \"[NO]REDefsok\" | \"STack\"=n | \"START=\"symbol_name | \"STATics\"" )
pick(    MSG_GENERAL_HELP_38,   "            | \"SYMFile\"[\"=\"symbol_file], | \"[NO]Undefsok\" | \"Verbose\"" )
pick(    MSG_GENERAL_HELP_39,   "            | \"VFRemoval\"" )

#define  MSG_GENERAL_HELP_LAST MSG_GENERAL_HELP_39
                
/*
 *  Dos help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_DOS_HELP_0,    "\ncommands valid for the MS-DOS executable format only:\n"  )
pick(    MSG_DOS_HELP_1,    "form      ::= \"Dos\" [\"COM\"]" )
pick(    MSG_DOS_HELP_2,    "directive ::= \"NEWsegment\"" )
pick(    MSG_DOS_HELP_3,    "option    ::=  \"PACKCode=\"n | \"PACKData=\"n | KNOWEAS" )

#define  MSG_DOS_HELP_LAST MSG_DOS_HELP_3

/*
 *  OS2 help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_OS2_HELP_0,    "\ncommands valid for the OS/2 executable formats (NE, LE, LX) only:\n" )
pick(    MSG_OS2_HELP_1,    "form      ::= \"OS2\" [\"FLat\"|\"LE\"|\"LX\"] [\"PHYSdevice\" | \"VIRTdevice\"" )
pick(    MSG_OS2_HELP_2,    "            | [\"DLl\"[\"INITGlobal\"|\"INITInstance\" [\"TERMInstance\"|\"TERMGlobal\"]]" )
pick(    MSG_OS2_HELP_3,    "            | \"PM\" | \"PMCompatible\" | \"FULLscreen\"] " )
pick(    MSG_OS2_HELP_4,    "directive ::= \"NEWsegment\"" )
pick(    MSG_OS2_HELP_5,    "            | \"SEGment\"     segdesc{\",\"segdesc}" )
pick(    MSG_OS2_HELP_6,    "            | \"IMPort\"      import{\",\"import}" )
pick(    MSG_OS2_HELP_7,    "            | \"EXPort\"      export{\",\"export}" )
pick(    MSG_OS2_HELP_8,    "            | \"EXPort\"      \"=\"wlib_directive_file" )
pick(    MSG_OS2_HELP_9,    "segdesc   ::= segspec segmodel {segmodel}" )
pick(    MSG_OS2_HELP_10,   "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick(    MSG_OS2_HELP_11,   "import    ::= entryname module[\".\"(extname | ordinal)]" )
pick(    MSG_OS2_HELP_12,   "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" )
pick(    MSG_OS2_HELP_13,   "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" )
pick(    MSG_OS2_HELP_14,   "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" )
pick(    MSG_OS2_HELP_15,   "            | \"MODName=\"module_name | \"MIXed1632\" | \"NEWFiles\" | \"OFFset=\"n" )
pick(    MSG_OS2_HELP_16,   "            | \"OLDlibrary=\"dll_name | \"PACKCode=\"n | \"PACKData=\"n | \"PROTmode\"" )
pick(    MSG_OS2_HELP_17,   "            | \"RESource=\"res_file_name | \"STUB=\"stub_name | \"NOSTUB\"" )
pick(    MSG_OS2_HELP_18,   "            | \"VERSion=\"major.[minor]" )
pick(    MSG_OS2_HELP_19,   "export    ::= entryname[\".\"ordinal][\"=\"internal][\"RESident\"][\"PRIVATE\"][iopl]" )
pick(    MSG_OS2_HELP_20,   "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" )
pick(    MSG_OS2_HELP_21,   "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" )
pick(    MSG_OS2_HELP_22,   "            | (\"Iopl\" | \"NOIopl\") | (\"CONforming\" | \"NONConforming\")" )
pick(    MSG_OS2_HELP_23,   "            | (\"PERManent\" | \"NONPERManent\") | \"INValid\" | \"RESident\"" )
pick(    MSG_OS2_HELP_24,   "            | \"CONTiguous\" | \"DYNamic\"\n" )

#define MSG_OS2_HELP_LAST MSG_OS2_HELP_24

/*
 *  Win16 help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_WINDOWS_HELP_0,    "\ncommands valid for the Microsoft Win16 executable formats (NE) only:\n" )
pick(    MSG_WINDOWS_HELP_1,    "form      ::= \"WIndows\" [\"DLl\"[\"INITGlobal\" | \"INITInstance\"]] [MEMory] [FOnt]" )
pick(    MSG_WINDOWS_HELP_2,    "directive ::= \"NEWsegment\"" )
pick(    MSG_WINDOWS_HELP_3,    "            | \"SEGment\"     segdesc{\",\"segdesc}" )
pick(    MSG_WINDOWS_HELP_4,    "            | \"IMPort\"      import{\",\"import}" )
pick(    MSG_WINDOWS_HELP_5,    "            | \"EXPort\"      export{\",\"export}" )
pick(    MSG_WINDOWS_HELP_6,    "            | \"EXPort\"      \"=\"wlib_directive_file" )
pick(    MSG_WINDOWS_HELP_7,    "segdesc   ::= segspec segmodel {segmodel}" )
pick(    MSG_WINDOWS_HELP_8,    "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick(    MSG_WINDOWS_HELP_9,    "import    ::= entryname module[\".\"(extname | ordinal)]" )
pick(    MSG_WINDOWS_HELP_10,   "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" )
pick(    MSG_WINDOWS_HELP_11,   "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" )
pick(    MSG_WINDOWS_HELP_12,   "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" )
pick(    MSG_WINDOWS_HELP_13,   "            | \"MODName=\"module_name | \"OLDlibrary=\"dll_name | \"PACKCode=\"n" )
pick(    MSG_WINDOWS_HELP_14,   "            | \"PACKData=\"n | \"RESource=\"res_file_name | \"RWReloccheck\"" )
pick(    MSG_WINDOWS_HELP_15,   "            | \"STUB=\"stub_name | \"NOSTUB\" | \"VERSion=\"major.[minor]" )
pick(    MSG_WINDOWS_HELP_16,   "export    ::= entryname[\".\"ordinal][\"=\"internal][\"RESident\"][\"PRIVATE\"]" )
pick(    MSG_WINDOWS_HELP_17,   "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" )
pick(    MSG_WINDOWS_HELP_18,   "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" )
pick(    MSG_WINDOWS_HELP_19,   "            | (\"MOVeable\" | \"FIXed\") | \"DIScardable\"\n" )

#define MSG_WINDOWS_HELP_LAST MSG_WINDOWS_HELP_19

/*
 *  NT help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_NT_HELP_0,     "\ncommands valid for the PE executable formats only:\n" )
pick(    MSG_NT_HELP_1,     "form      ::= \"WIndows PE\" [\"TNT\"|\"HX\"]" )
pick(    MSG_NT_HELP_2,     "              [\"DLl\"[\"INITGlobal\"|\"INITInstance\" [\"TERMInstance\"|\"TERMGlobal\"]]" )
pick(    MSG_NT_HELP_3,     "directive ::= \"RUntime\"     runoption[\"=\"major[\".\"minor]]" )
pick(    MSG_NT_HELP_4,     "            | \"SEGment\"     segdesc{\",\"segdesc}" )
pick(    MSG_NT_HELP_5,     "            | \"IMPort\"      import{\",\"import}" )
pick(    MSG_NT_HELP_6,     "            | \"EXPort\"      export{\",\"export}" )
pick(    MSG_NT_HELP_7,     "            | \"EXPort\"      \"=\"wlib_directive_file" )
pick(    MSG_NT_HELP_8,     "            | \"COMmit\"       commitopt{\",\"commitopt}" )
pick(    MSG_NT_HELP_9,     "segdesc   ::= segspec segmodel {segmodel}" )
pick(    MSG_NT_HELP_10,    "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick(    MSG_NT_HELP_11,    "import    ::= entryname module[\".\"(extname | ordinal)]" )
pick(    MSG_NT_HELP_12,    "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" )
pick(    MSG_NT_HELP_13,    "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" )
pick(    MSG_NT_HELP_14,    "            | \"MODName=\"module_name | \"NOSTDCall\" | \"OBJAlign=\"n | \"OFFset=\"n" )
pick(    MSG_NT_HELP_15,    "            | \"OLDlibrary=\"dll_name | \"RESource=\"res_file_name" )
pick(    MSG_NT_HELP_16,    "            | \"STUB=\"stub_name | \"NOSTUB\" | \"VERSion=\"major.[minor]" )
pick(    MSG_NT_HELP_17,    "            | \"[NO]LARGEaddressaware" )
pick(    MSG_NT_HELP_18,    "export    ::= entryname[\".\"ordinal][\"=\"internal][\"PRIVATE\"]" )
pick(    MSG_NT_HELP_19,    "segmodel  ::= (\"SHared\" | \"NONShared\") | (\"PAGEable\" | \"NONPageable\"" )
pick(    MSG_NT_HELP_19_1,  "            | \"EXECUTAble\" | \"WRITAble\"" )
pick(    MSG_NT_HELP_20,    "runoption ::= (\"NATive\" | \"WINdows\" | \"CONsole\" | \"POSix\" | \"OS2\" | \"DOSstyle\")" )
pick(    MSG_NT_HELP_21,    "commitopt ::= \"STack=\"n | \"Heap=\"n\n" )

#define MSG_NT_HELP_LAST MSG_NT_HELP_21

/*
 *  Phar Lap help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_PHAR_HELP_0,   "\ncommands valid for the Phar Lap executable formats only:\n" )
pick(    MSG_PHAR_HELP_3,   "form      ::= \"PHARlap\" [\"EXTended\" | \"REX\" | \"SEGmented\"]" )
pick(    MSG_PHAR_HELP_4,   "directive ::= \"RUntime\"     runoption{\",\"runoption}" )
pick(    MSG_PHAR_HELP_5,   "option    ::= \"MAXData=\"n | \"MINData=\"n | \"OFFset=\"n | \"STUB=\"stub_name" )
pick(    MSG_PHAR_HELP_6,   "runoption ::= \"MINReal=\"n | \"MAXReal=\"n | \"CALLBufs=\"n | \"MINIBuf=\"n" )
pick(    MSG_PHAR_HELP_7,   "            | \"MAXIBuf=\"n | \"NISTack=\"n | \"ISTKsize=\"n | \"PRIVileged\"" )
pick(    MSG_PHAR_HELP_8,   "            | \"REALBreak=\"(n | symbol_name ) | \"UNPRIVileged\"" )

#define MSG_PHAR_HELP_LAST MSG_PHAR_HELP_8

/*
 *  Novell help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_NOVELL_HELP_0, "\ncommands valid for the Novell Netware executable format only:\n" )
pick(    MSG_NOVELL_HELP_3, "form      ::= \"NOVell\" [\"NLM\" | \"LAN\" | \"DSK\" | \"NAM\" | 'number'] 'description'" )
pick(    MSG_NOVELL_HELP_4, "directive ::= \"MODUle\"      module_name{\",\"module_name}" )
pick(    MSG_NOVELL_HELP_5, "            | \"IMPort\"      import{\",\"import}" )
pick(    MSG_NOVELL_HELP_6, "            | \"EXPort\"      export{\",\"export}" )
pick(    MSG_NOVELL_HELP_7, "            | \"Debug\"       \"Novell\" [\"ONLyexports\"] [\"REFerenced\"]" )
pick(    MSG_NOVELL_HELP_8, "option    ::= \"CHeck=\"symbol_name | \"COPYRight\" [string] | \"CUSTom=\"file_name" )
pick(    MSG_NOVELL_HELP_9, "            | \"EXit=\"symbol_name | \"HElp=\"file_name | \"IMPFile=\"file_name" )
pick(    MSG_NOVELL_HELP_10,    "            | \"IMPLib\"[=file_name] | \"MESsages\"[=file_name] | \"MULTILoad\"" )
pick(    MSG_NOVELL_HELP_11,    "            | \"NLMFlags=\"value | \"PSeudopreemption\" | \"REentrant\"" )
pick(    MSG_NOVELL_HELP_12,    "            | \"SCReenname\" description | \"SHArelib=\"file_name | \"SYnchronize\"" )
pick(    MSG_NOVELL_HELP_13,    "            | \"THReadname\" name | \"VERSion=\"major[.minor[.revision]]" )
pick(    MSG_NOVELL_HELP_14,    "            | \"XDCdata=\"file_name | \"AUTOUNload\"" )
pick(    MSG_NOVELL_HELP_15,    "import    ::= entryname" )
pick(    MSG_NOVELL_HELP_16,    "export    ::= entryname" )

#define MSG_NOVELL_HELP_LAST MSG_NOVELL_HELP_16

#ifdef _DOS16M
/*
 *  Dos/16M help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_DOS16_HELP_0,  "\ncommands valid for the DOS/16M executable format only:\n" )
pick(    MSG_DOS16_HELP_3,  "form      ::= \"DOS16M\"" )
pick(    MSG_DOS16_HELP_4,  "directive ::= \"MEMory\"      strategy" )
pick(    MSG_DOS16_HELP_5,  "            | \"TRansparent\" seg_type" )
pick(    MSG_DOS16_HELP_6,  "            | \"RUntime\"     runoption{\",\"runoption}" )
pick(    MSG_DOS16_HELP_7,  "option    ::= \"BUFfer=\"n | \"GDTsize=\"n | (\"RELocs\" | \"NORelocs\") | \"SELstart=\"n" )
pick(    MSG_DOS16_HELP_8,  "            | \"DATASize=\"n | \"EXTended=\"n" )
pick(    MSG_DOS16_HELP_9,   "            | \"STUB=\"stub_name" )
pick(    MSG_DOS16_HELP_10, "runoption ::= \"KEYboard\" | \"OVERload\" | \"INIT00\" | \"INITFF\" | \"ROTate\" | \"AUTO\"" )
pick(    MSG_DOS16_HELP_11, "            | \"SELectors\" | \"INT10\"" )
pick(    MSG_DOS16_HELP_12, "strategy  ::= \"TRYExtended\" | \"TRYLow\" | \"FORCEExtended\" | \"FORCELow\"" )
pick(    MSG_DOS16_HELP_13, "seg_type  ::= \"STack\" | \"DAta\"" )

#define MSG_DOS16_HELP_LAST MSG_DOS16_HELP_13
#endif

/*
 *  QNX help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_QNX_HELP_0,    "\ncommands valid for the QNX executable format only:\n" )
pick(    MSG_QNX_HELP_3,    "form      ::= \"QNX\" [\"FLat\"]" )
pick(    MSG_QNX_HELP_4,    "directive ::= \"SEGment\"     segdesc{\",\"segdesc}" )
pick(    MSG_QNX_HELP_5,    "            | \"NEWsegment\"" )
pick(    MSG_QNX_HELP_6,    "option    ::= \"Heapsize=\"n | \"LInearrelocs\" | \"LOnglived\" | \"NORelocs\" " )
pick(    MSG_QNX_HELP_7,    "            | \"OFFset=\"n | \"PACKCode=\"n | \"PACKData=\"n | \"PRIVilege\"=n" )
pick(    MSG_QNX_HELP_8,    "            | \"RESource\"(\"=\"res_file_name | string)" )
pick(    MSG_QNX_HELP_9,    "segdesc   ::= segspec segmodel {segmodel}" )
pick(    MSG_QNX_HELP_10,   "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick(    MSG_QNX_HELP_11,   "segmodel  ::= \"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\"" )

#define MSG_QNX_HELP_LAST MSG_QNX_HELP_11

/*
 *  ELF help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_ELF_HELP_0,    "\ncommands valid for the ELF executable format only:\n" )
pick(    MSG_ELF_HELP_3,    "form      ::= \"ELF\" [\"DLl\"]" )
pick(    MSG_ELF_HELP_4,    "directive ::= \"MODUle\"      module_name{\",\"module_name}" )
pick(    MSG_ELF_HELP_5,    "            | \"IMPort\"      import{\",\"import}" )
pick(    MSG_ELF_HELP_6,    "            | \"EXPort\"      export{\",\"export}" )
pick(    MSG_ELF_HELP_7,    "            | \"RUntime\"     runoption{\",\"runoption}" )
pick(    MSG_ELF_HELP_8,    "option    ::= \"Alignment=\"n | \"EXPORTAll\" | \"EXTRASections=\"n | \"OBJAlign=\"n" )
pick(    MSG_ELF_HELP_9,    "            | \"OFFSet=\"n" )
pick(    MSG_ELF_HELP_10,   "import    ::= entryname" )
pick(    MSG_ELF_HELP_11,   "export    ::= entryname" )
pick(    MSG_ELF_HELP_12,   "runoption ::= (\"SVR4\" | \"LINux\" | \"FREebsd\" | \"NETbsd\" | \"SOLaris\" | \"ABIver\" )" )

#define MSG_ELF_HELP_LAST MSG_ELF_HELP_12

/*
 *  Windows help screen.
 *  To start a new page, leave a line undefined or define an empty line.
 */
pick(    MSG_WIN_VXD_HELP_0,    "\ncommands valid for the Microsoft Windows VxD formats only:\n" )
pick(    MSG_WIN_VXD_HELP_1,    "form      ::= \"WIndows VXD\" [\"DYNamic\"]" )
/*
pick(    MSG_WIN_VXD_HELP_2,    "directive ::= \"NEWsegment\"" )
pick(    MSG_WIN_VXD_HELP_3,    "            | \"SEGment\"     segdesc{\",\"segdesc}" )
pick(    MSG_WIN_VXD_HELP_4,    "            | \"IMPort\"      import{\",\"import}" )
pick(    MSG_WIN_VXD_HELP_5,    "            | \"EXPort\"      export{\",\"export}" )
pick(    MSG_WIN_VXD_HELP_6,    "            | \"EXPort\"      \"=\"wlib_directive_file" )
pick(    MSG_WIN_VXD_HELP_7,    "segdesc   ::= segspec segmodel {segmodel}" )
pick(    MSG_WIN_VXD_HELP_8,    "segspec   ::= seg_name | \"Class\" class_name | \"TYpe\" (\"CODE\" | \"DATA\")" )
pick(    MSG_WIN_VXD_HELP_9,    "import    ::= entryname module[\".\"(extname | ordinal)]" )
pick(    MSG_WIN_VXD_HELP_10,   "option    ::= \"Alignment=\"n | \"DEscription\" description | \"Heapsize=\"n" )
pick(    MSG_WIN_VXD_HELP_11,   "            | \"IMPFile\"[=file_name] | \"IMPLib\"[=file_name]" )
pick(    MSG_WIN_VXD_HELP_12,   "            | (\"MANYautodata\" | \"NOautodata\" | \"ONEAutodata\")" )
pick(    MSG_WIN_VXD_HELP_13,   "            | \"MODName=\"module_name | \"OLDlibrary=\"dll_name | \"PACKCode=\"n" )
pick(    MSG_WIN_VXD_HELP_14,   "            | \"PACKData=\"n | \"RESource=\"res_file_name | \"RWReloccheck\"" )
pick(    MSG_WIN_VXD_HELP_15,   "            | \"STUB=\"stub_name | \"NOSTUB\" | \"VERSion=\"major.[minor]" )
pick(    MSG_WIN_VXD_HELP_16,   "export    ::= entryname[\".\"ordinal][\"=\"internal][\"RESident\"][\"PRIVATE\"]" )
pick(    MSG_WIN_VXD_HELP_17,   "segmodel  ::= (\"PReload\" | \"LOadoncall\") | (\"SHared\" | \"NONShared\")" )
pick(    MSG_WIN_VXD_HELP_18,   "            | (\"EXECUTEOnly\" | \"EXECUTERead\" | \"READOnly\" | \"READWrite\")" )
pick(    MSG_WIN_VXD_HELP_19,   "            | (\"MOVeable\" | \"FIXed\") | \"DIScardable\"\n" )
*/
#define MSG_WIN_VXD_HELP_LAST MSG_WIN_VXD_HELP_1

pick(    MSG_RAW_HELP_0,    "\ncommands valid for the RAW executable formats only:\n" )
pick(    MSG_RAW_HELP_1,    "form      ::= \"Raw\" (\"BIN\" | \"HEX\")" )
pick(    MSG_RAW_HELP_2,    "option    ::= \"OFFset=\"n" )

#define MSG_RAW_HELP_LAST MSG_RAW_HELP_2
